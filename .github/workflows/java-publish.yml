# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Java Publish

on:
  release:
    types:
      - released
  pull_request:
    paths:
      - .github/workflows/java-publish.yml
  workflow_dispatch:
    inputs:
      mode:
        description: "dry_run: build & package only, release: build & deploy to OSSRH"
        required: true
        default: "dry_run"
        type: choice
        options:
          - dry_run
          - release

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: java
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Java sdk
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          server-id: ossrh
          server-username: SONATYPE_USER
          server-password: SONATYPE_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Set github
        run: |
          git config --global user.name "LanceDB Github Runner"
          git config --global user.email "dev+gha@lancedb.com"

      - name: Dry run
        if: github.event_name == 'pull_request'
        run: |
          ./mvnw --batch-mode -DskipTests package

      - name: Publish with Java 8
        if: |
          (github.event_name == 'release' && github.event.action == 'released') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'release')
        run: |
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          export GPG_TTY=$(tty)
          ./mvnw --batch-mode -DskipTests -DpushChanges=false -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} deploy -P deploy-to-ossrh
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_TOKEN: ${{ secrets.SONATYPE_TOKEN }}
