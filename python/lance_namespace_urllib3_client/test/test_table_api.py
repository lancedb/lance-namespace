# coding: utf-8

"""
    Lance REST Namespace Specification

    This OpenAPI specification is a part of the Lance namespace specification. It contains 2 parts: The `components/schemas`, `components/responses`, `components/examples` sections define the request and response shape for each operation in a Lance Namespace across all implementations. See https://lancedb.github.io/lance-namespace/spec/operations for more details. The `servers`, `security`, `paths`, `components/parameters` sections are for the  Lance REST Namespace implementation, which defines a complete REST server that can work with Lance datasets. See https://lancedb.github.io/lance-namespace/spec/impls/rest for more details. 

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lance_namespace_urllib3_client.api.table_api import TableApi


class TestTableApi(unittest.TestCase):
    """TableApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TableApi()

    def tearDown(self) -> None:
        pass

    def test_count_rows(self) -> None:
        """Test case for count_rows

        Count rows in a table
        """
        pass

    def test_create_index(self) -> None:
        """Test case for create_index

        Create an index on a table
        """
        pass

    def test_create_scalar_index(self) -> None:
        """Test case for create_scalar_index

        Create a scalar index on a table
        """
        pass

    def test_create_table(self) -> None:
        """Test case for create_table

        Create a table with the given name
        """
        pass

    def test_delete_from_table(self) -> None:
        """Test case for delete_from_table

        Delete rows from a table
        """
        pass

    def test_deregister_table(self) -> None:
        """Test case for deregister_table

        Deregister a table from its namespace
        """
        pass

    def test_describe_table(self) -> None:
        """Test case for describe_table

        Describe a table from the namespace
        """
        pass

    def test_describe_table_v2(self) -> None:
        """Test case for describe_table_v2

        Describe a table from the namespace
        """
        pass

    def test_drop_table(self) -> None:
        """Test case for drop_table

        Drop a table from its namespace
        """
        pass

    def test_get_index_stats(self) -> None:
        """Test case for get_index_stats

        Get index statistics
        """
        pass

    def test_insert_table(self) -> None:
        """Test case for insert_table

        Insert records into a table
        """
        pass

    def test_list_indices(self) -> None:
        """Test case for list_indices

        List indices on a table
        """
        pass

    def test_list_tables(self) -> None:
        """Test case for list_tables

        List tables
        """
        pass

    def test_merge_insert_table(self) -> None:
        """Test case for merge_insert_table

        Merge insert (upsert) records into a table
        """
        pass

    def test_query_table(self) -> None:
        """Test case for query_table

        Query a table
        """
        pass

    def test_register_table(self) -> None:
        """Test case for register_table

        Register a table to a namespace
        """
        pass

    def test_table_exists(self) -> None:
        """Test case for table_exists

        Check if a table exists
        """
        pass

    def test_update_table(self) -> None:
        """Test case for update_table

        Update rows in a table
        """
        pass


if __name__ == '__main__':
    unittest.main()
