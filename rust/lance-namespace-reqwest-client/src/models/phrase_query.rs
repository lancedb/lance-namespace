/*
 * Lance Namespace Specification
 *
 * This OpenAPI specification is a part of the Lance namespace specification. It contains 2 parts:  The `components/schemas`, `components/responses`, `components/examples`, `tags` sections define the request and response shape for each operation in a Lance Namespace across all implementations. See https://lancedb.github.io/lance-namespace/spec/operations for more details.  The `servers`, `security`, `paths`, `components/parameters` sections are for the  Lance REST Namespace implementation, which defines a complete REST server that can work with Lance datasets. See https://lancedb.github.io/lance-namespace/spec/impls/rest for more details. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PhraseQuery {
    #[serde(rename = "column", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub column: Option<Option<String>>,
    #[serde(rename = "slop", skip_serializing_if = "Option::is_none")]
    pub slop: Option<i32>,
    #[serde(rename = "terms")]
    pub terms: String,
}

impl PhraseQuery {
    pub fn new(terms: String) -> PhraseQuery {
        PhraseQuery {
            column: None,
            slop: None,
            terms,
        }
    }
}

