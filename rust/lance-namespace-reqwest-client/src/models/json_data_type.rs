/*
 * Lance Namespace Specification
 *
 * This OpenAPI specification is a part of the Lance namespace specification. It contains 2 parts:  The `components/schemas`, `components/responses`, `components/examples`, `tags` sections define the request and response shape for each operation in a Lance Namespace across all implementations. See https://lancedb.github.io/lance-namespace/spec/operations for more details.  The `servers`, `security`, `paths`, `components/parameters` sections are for the  Lance REST Namespace implementation, which defines a complete REST server that can work with Lance datasets. See https://lancedb.github.io/lance-namespace/spec/impls/rest for more details. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// JsonDataType : JSON representation of an Apache Arrow DataType
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsonDataType {
    /// Fields for complex types like Struct, Union, etc.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<models::JsonField>>,
    /// Length for fixed-size types
    #[serde(rename = "length", skip_serializing_if = "Option::is_none")]
    pub length: Option<i64>,
    /// The data type name
    #[serde(rename = "type")]
    pub r#type: String,
}

impl JsonDataType {
    /// JSON representation of an Apache Arrow DataType
    pub fn new(r#type: String) -> JsonDataType {
        JsonDataType {
            fields: None,
            length: None,
            r#type,
        }
    }
}

