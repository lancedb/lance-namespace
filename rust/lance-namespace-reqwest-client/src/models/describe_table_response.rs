/*
 * Lance REST Namespace Specification
 *
 * This OpenAPI specification is a part of the Lance namespace specification. It contains 2 parts: The `components/schemas`, `components/responses`, `components/examples` sections define the request and response shape for each operation in a Lance Namespace across all implementations. See https://lancedb.github.io/lance-namespace/spec/operations for more details. The `servers`, `security`, `paths`, `components/parameters` sections are for the  Lance REST Namespace implementation, which defines a complete REST server that can work with Lance datasets. See https://lancedb.github.io/lance-namespace/spec/impls/rest for more details. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DescribeTableResponse {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "namespace")]
    pub namespace: Vec<String>,
    #[serde(rename = "location")]
    pub location: String,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "schema")]
    pub schema: Box<models::JsonSchema>,
    #[serde(rename = "stats")]
    pub stats: Box<models::TableBasicStats>,
    #[serde(rename = "table")]
    pub table: String,
    /// Table URI, optional
    #[serde(rename = "table_uri", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub table_uri: Option<Option<String>>,
    #[serde(rename = "version")]
    pub version: i64,
}

impl DescribeTableResponse {
    pub fn new(name: String, namespace: Vec<String>, location: String, schema: models::JsonSchema, stats: models::TableBasicStats, table: String, version: i64) -> DescribeTableResponse {
        DescribeTableResponse {
            name,
            namespace,
            location,
            properties: None,
            schema: Box::new(schema),
            stats: Box::new(stats),
            table,
            table_uri: None,
            version,
        }
    }
}

