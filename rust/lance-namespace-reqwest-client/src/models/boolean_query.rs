/*
 * Lance Namespace Specification
 *
 * This OpenAPI specification is a part of the Lance namespace specification. It contains 2 parts:  The `components/schemas`, `components/responses`, `components/examples`, `tags` sections define the request and response shape for each operation in a Lance Namespace across all implementations. See https://lancedb.github.io/lance-namespace/spec/operations for more details.  The `servers`, `security`, `paths`, `components/parameters` sections are for the  Lance REST Namespace implementation, which defines a complete REST server that can work with Lance datasets. See https://lancedb.github.io/lance-namespace/spec/impls/rest for more details. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BooleanQuery : Boolean query with must, should, and must_not clauses
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BooleanQuery {
    /// Queries that must match (AND)
    #[serde(rename = "must")]
    pub must: Vec<models::FtsQuery>,
    /// Queries that must not match (NOT)
    #[serde(rename = "must_not")]
    pub must_not: Vec<models::FtsQuery>,
    /// Queries that should match (OR)
    #[serde(rename = "should")]
    pub should: Vec<models::FtsQuery>,
}

impl BooleanQuery {
    /// Boolean query with must, should, and must_not clauses
    pub fn new(must: Vec<models::FtsQuery>, must_not: Vec<models::FtsQuery>, should: Vec<models::FtsQuery>) -> BooleanQuery {
        BooleanQuery {
            must,
            must_not,
            should,
        }
    }
}

