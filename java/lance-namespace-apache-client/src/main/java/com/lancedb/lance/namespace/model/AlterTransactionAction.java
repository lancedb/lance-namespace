/*
 * Lance REST Namespace Specification
 * **Lance Namespace Specification** is an open specification on top of the storage-based Lance data format  to standardize access to a collection of Lance tables (a.k.a. Lance datasets). It describes how a metadata service like Apache Hive MetaStore (HMS), Apache Gravitino, Unity Catalog, etc. should store and use Lance tables, as well as how ML/AI tools and analytics compute engines (will together be called _\"tools\"_ in this document) should integrate with Lance tables. A Lance namespace is a centralized repository for discovering, organizing, and managing Lance tables. It can either contain a collection of tables, or a collection of Lance namespaces recursively. It is designed to encapsulates concepts including namespace, metastore, database, schema, etc. that frequently appear in other similar data systems to allow easy integration with any system of any type of object hierarchy. In an enterprise environment, typically there is a requirement to store tables in a metadata service  for more advanced governance features around access control, auditing, lineage tracking, etc. **Lance REST Namespace** is an OpenAPI protocol that enables reading, writing and managing Lance tables by connecting those metadata services or building a custom metadata server in a standardized way. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lancedb.lance.namespace.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lancedb.lance.namespace.model.AlterTransactionSetProperty;
import com.lancedb.lance.namespace.model.AlterTransactionSetStatus;
import com.lancedb.lance.namespace.model.AlterTransactionUnsetProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * A single action that could be performed to alter a transaction. This action holds the model definition for all types of specific actions models, this is to minimize difference and compatibility issue across codegen in different languages. When used, only one of the actions should be non-null for each action. If you would like to perform multiple actions, set a list of actions in the AlterTransactionRequest. 
 */
@JsonPropertyOrder({
  AlterTransactionAction.JSON_PROPERTY_SET_STATUS_ACTION,
  AlterTransactionAction.JSON_PROPERTY_SET_PROPERTY_ACTION,
  AlterTransactionAction.JSON_PROPERTY_UNSET_PROPERTY_ACTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class AlterTransactionAction {
  public static final String JSON_PROPERTY_SET_STATUS_ACTION = "setStatusAction";
  @javax.annotation.Nullable
  private AlterTransactionSetStatus setStatusAction;

  public static final String JSON_PROPERTY_SET_PROPERTY_ACTION = "setPropertyAction";
  @javax.annotation.Nullable
  private AlterTransactionSetProperty setPropertyAction;

  public static final String JSON_PROPERTY_UNSET_PROPERTY_ACTION = "unsetPropertyAction";
  @javax.annotation.Nullable
  private AlterTransactionUnsetProperty unsetPropertyAction;

  public AlterTransactionAction() {
  }

  public AlterTransactionAction setStatusAction(@javax.annotation.Nullable AlterTransactionSetStatus setStatusAction) {
    
    this.setStatusAction = setStatusAction;
    return this;
  }

  /**
   * Get setStatusAction
   * @return setStatusAction
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SET_STATUS_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlterTransactionSetStatus getSetStatusAction() {
    return setStatusAction;
  }


  @JsonProperty(JSON_PROPERTY_SET_STATUS_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetStatusAction(@javax.annotation.Nullable AlterTransactionSetStatus setStatusAction) {
    this.setStatusAction = setStatusAction;
  }

  public AlterTransactionAction setPropertyAction(@javax.annotation.Nullable AlterTransactionSetProperty setPropertyAction) {
    
    this.setPropertyAction = setPropertyAction;
    return this;
  }

  /**
   * Get setPropertyAction
   * @return setPropertyAction
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SET_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlterTransactionSetProperty getSetPropertyAction() {
    return setPropertyAction;
  }


  @JsonProperty(JSON_PROPERTY_SET_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetPropertyAction(@javax.annotation.Nullable AlterTransactionSetProperty setPropertyAction) {
    this.setPropertyAction = setPropertyAction;
  }

  public AlterTransactionAction unsetPropertyAction(@javax.annotation.Nullable AlterTransactionUnsetProperty unsetPropertyAction) {
    
    this.unsetPropertyAction = unsetPropertyAction;
    return this;
  }

  /**
   * Get unsetPropertyAction
   * @return unsetPropertyAction
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNSET_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlterTransactionUnsetProperty getUnsetPropertyAction() {
    return unsetPropertyAction;
  }


  @JsonProperty(JSON_PROPERTY_UNSET_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnsetPropertyAction(@javax.annotation.Nullable AlterTransactionUnsetProperty unsetPropertyAction) {
    this.unsetPropertyAction = unsetPropertyAction;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlterTransactionAction alterTransactionAction = (AlterTransactionAction) o;
    return Objects.equals(this.setStatusAction, alterTransactionAction.setStatusAction) &&
        Objects.equals(this.setPropertyAction, alterTransactionAction.setPropertyAction) &&
        Objects.equals(this.unsetPropertyAction, alterTransactionAction.unsetPropertyAction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(setStatusAction, setPropertyAction, unsetPropertyAction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlterTransactionAction {\n");
    sb.append("    setStatusAction: ").append(toIndentedString(setStatusAction)).append("\n");
    sb.append("    setPropertyAction: ").append(toIndentedString(setPropertyAction)).append("\n");
    sb.append("    unsetPropertyAction: ").append(toIndentedString(unsetPropertyAction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `setStatusAction` to the URL query string
    if (getSetStatusAction() != null) {
      joiner.add(getSetStatusAction().toUrlQueryString(prefix + "setStatusAction" + suffix));
    }

    // add `setPropertyAction` to the URL query string
    if (getSetPropertyAction() != null) {
      joiner.add(getSetPropertyAction().toUrlQueryString(prefix + "setPropertyAction" + suffix));
    }

    // add `unsetPropertyAction` to the URL query string
    if (getUnsetPropertyAction() != null) {
      joiner.add(getUnsetPropertyAction().toUrlQueryString(prefix + "unsetPropertyAction" + suffix));
    }

    return joiner.toString();
  }

}

